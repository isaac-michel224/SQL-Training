--Create table


CREATE TABLE test (
a integer,
  b TEXT 
);

INSERT INTO test VALUES (1, 'a');
INSERT INTO test VALUES (2, 'b');
INSERT INTO test VALUES (3, 'c');

SELECT * from test;


CREATE TABLE test (
a TEXT,
  b TEXT 
);

INSERT INTO test VALUES ('one', 'two');
SELECT * from test;

DROP TABLE test;

drop table if exists test;


DROP TABLE test;

SELECT * FROM test;

CREATE TABLE test (a Integer, b text, c text);

INSERT into test values (1, 'This', 'Right here!');

INSERT into test (b, c) values ('That', 'Over there!');

INSERT into test DEFAULT VALUES;

insert into test (a, b, c) SELECT id, name, description from item;


SELECT * from test WHERE a IS NULL; --NULL is not a value, it is the absence of a value
--to test for null, input IS NULL into a clause 


SELECT * from test WHERE a IS NULL; --NULL is not a value, it is the absence of a value
--to test for null, input IS NULL into a clause 
insert into test (a, b, c) VALUES (0, NULL, '');
SELECT * FROM TEST;

SELECT * from test WHERE b IS NULL; --NULL is not a value, it is the absence(i.e. lack) of a value
SELECT * from test WHERE c IS ''; --NULL is not a value, it is the absence of a value




create table test(
  a INTEGER NOT NULL,
  b text not NULL,
  c text
  );


--Constraints

DROP TABLE IF EXISTS test;

CREATE TABLE test(a TEXT, b TEXT, c TEXT DEFAULT 'panda'); 
--if we fail to add data to c column, a default value of 'panda' will be insert
INSERT into test(a, b) values ('one', 'two');
INSERT into test(a, b) values ('uno', 'two');
--in some cases, NULL value is separate from unique constraint 
SELECT * from test;

--changing a schema

DROP TABLE IF EXISTS test;

CREATE TABLE test(a TEXT, b TEXT, c TEXT); 
INSERT into test values ('one', 'two', 'three');
INSERT into test values ('two', 'three', 'four');
INSERT into test values ( 'three', 'four', 'five');

SELECT * from test;

ALTER TABLE test ADD d TEXT;



--ID Columns

DROP TABLE IF EXISTS test;

CREATE TABLE test(
  id INTEGER PRIMARY KEY,
                  a INTEGER, 
                  b TEXT
                 ); 
                 
INSERT into test (a,b) values (10, 'a');
INSERT into test (a,b) values (11, 'b');
INSERT into test (a,b) values ( 12, 'c');

SELECT * from test;

--Filtering data 
SELECT * FROM Country;

SELECT name, continent, population from Country
WHERE population < 100000 OR population is NULL ORDER BY population DESC;

SELECT name, continent, population from Country
WHERE population < 100000 and continent = 'Oceania' ORDER BY population DESC;

SELECT name, continent, population from Country
WHERE name like '%island%' ORDER by name;

SELECT name, continent, population from Country
WHERE name like '_a%' ORDER by name;

SELECT name, continent, population from Country
WHERE continent in ('Europe','Asia') ORDER by name;


SELECT DISTINCT continent FROM Country;

CREATE TABLE test (a int, b int);
INSERT INTO test VALUES ( 1, 1 );
INSERT INTO test VALUES ( 2, 1 );
INSERT INTO test VALUES ( 3, 1 );
INSERT INTO test VALUES ( 4, 1 );
INSERT INTO test VALUES ( 5, 1 );
INSERT INTO test VALUES ( 1, 2 );
INSERT INTO test VALUES ( 1, 2 );
INSERT INTO test VALUES ( 1, 2 );
INSERT INTO test VALUES ( 1, 2 );
INSERT INTO test VALUES ( 1, 2 );
SELECT * FROM test;

SELECT DISTINCT a, b from test;

